openapi: 3.0.0
info:
  title: ' attachment-public/'
  description: Needs description.
  termsOfService: http://bunq.com/terms-api/
  contact:
    name: bunq Developer Support
    url: http://bunq.com/developer
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
servers:
  - url: https://public-api.sandbox.bunq.com/{basePath}
    description: Sandbox server
    variables:
      basePath:
        default: v1
  - url: https://api.bunq.com/{basePath}
    description: Production server
    variables:
      basePath:
        default: v1
components:
  schemas:
    AttachmentPublicRead:
      type: object
      properties:
        uuid:
          type: string
          description: The UUID of the attachment.
          readOnly: true
          writeOnly: false
        created:
          type: string
          description: The timestamp of the attachment's creation.
          readOnly: true
          writeOnly: false
        updated:
          type: string
          description: The timestamp of the attachment's last update.
          readOnly: true
          writeOnly: false
        attachment:
          type: object
          description: The attachment.
          readOnly: true
          writeOnly: false
          $ref: '#/components/schemas/Attachment'
paths:
  /attachment-public/{itemId}:
    get:
      tags:
        - - - - attachment-public
      summary: ''
      operationId: READ_AttachmentPublic
      description: >-
        Get a specific attachment's metadata through its UUID. The Content-Type
        header of the response will describe the MIME type of the attachment
        file.
      parameters:
        - in: path
          name: itemId
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      responses:
        '200':
          description: >-
            This call is used to upload an attachment that can be referenced to
            as an avatar (through the Avatar endpoint) or in a tab sent.
            Attachments supported are png, jpg and gif.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentPublicRead'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
  /attachment-public/{attachment-publicUUID}/content:
    get:
      tags:
        - - - - content
      summary: ''
      operationId: List_all_Content_for_AttachmentPublic
      description: Get the raw content of a specific attachment.
      parameters:
        - in: path
          name: attachment-publicUUID
          description: ''
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      responses:
        '200':
          description: >-
            Fetch the raw content of a public attachment with given ID. The raw
            content is the binary representation of a file, without any JSON
            wrapping.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentPublicContentListing'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
tags: []
