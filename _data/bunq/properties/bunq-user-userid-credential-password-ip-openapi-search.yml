openapi: 3.0.0
info:
  title: ' user/{userID}/credential-password-ip'
  description: Needs description.
  termsOfService: http://bunq.com/terms-api/
  contact:
    name: bunq Developer Support
    url: http://bunq.com/developer
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
servers:
  - url: https://public-api.sandbox.bunq.com/{basePath}
    description: Sandbox server
    variables:
      basePath:
        default: v1
  - url: https://api.bunq.com/{basePath}
    description: Production server
    variables:
      basePath:
        default: v1
components:
  schemas:
    UserCredentialPasswordIpRead:
      type: object
      properties:
        id:
          type: integer
          description: The id of the credential.
          readOnly: true
          writeOnly: false
        created:
          type: string
          description: The timestamp of the credential object's creation.
          readOnly: true
          writeOnly: false
        updated:
          type: string
          description: The timestamp of the credential object's last update.
          readOnly: true
          writeOnly: false
        status:
          type: string
          description: The status of the credential.
          readOnly: true
          writeOnly: false
        expiry_time:
          type: string
          description: 'When the status is PENDING_FIRST_USE: when the credential expires.'
          readOnly: true
          writeOnly: false
        token_value:
          type: string
          description: 'When the status is PENDING_FIRST_USE: the value of the token.'
          readOnly: true
          writeOnly: false
        permitted_device:
          type: object
          description: >-
            When the status is ACTIVE: the details of the device that may use
            the credential.
          readOnly: true
          writeOnly: false
          $ref: '#/components/schemas/PermittedDevice'
    PermittedIpRead:
      type: object
      properties:
        ip:
          type: string
          description: The IP address.
          readOnly: true
          writeOnly: false
        status:
          type: string
          description: >-
            The status of the IP. May be "ACTIVE" or "INACTIVE". It is only
            possible to make requests from "ACTIVE" IP addresses. Only "ACTIVE"
            IPs will be billed.
          readOnly: true
          writeOnly: false
    PermittedIpUpdate:
      type: object
      properties:
        Id:
          type: object
          description: The id of the created item
          readOnly: true
          writeOnly: false
          $ref: '#/components/schemas/BunqId'
    PermittedIpCreate:
      type: object
      properties:
        Id:
          type: object
          description: The id of the created item
          readOnly: true
          writeOnly: false
          $ref: '#/components/schemas/BunqId'
paths:
  /user/{userID}/credential-password-ip/{itemId}:
    get:
      tags:
        - Credentials
        - IP
        - Items
        - Password
        - Users
      summary: Retrieve User User Id Credential Password Ip Item Id
      operationId: READ_CredentialPasswordIp_for_User
      description: >-
        Create a credential of a user for server authentication, or delete the
        credential of a user for server authentication.
      parameters:
        - in: path
          name: userID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: itemId
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      responses:
        '200':
          description: >-
            Create a credential of a user for server authentication, or delete
            the credential of a user for server authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialPasswordIpRead'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
  /user/{userID}/credential-password-ip:
    get:
      tags:
        - Credentials
        - IP
        - Password
        - Users
      summary: Retrieve User User Id Credential Password Ip
      operationId: List_all_CredentialPasswordIp_for_User
      description: >-
        Create a credential of a user for server authentication, or delete the
        credential of a user for server authentication.
      parameters:
        - in: path
          name: userID
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      responses:
        '200':
          description: >-
            Create a credential of a user for server authentication, or delete
            the credential of a user for server authentication.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentialPasswordIpListing'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
  /user/{userID}/credential-password-ip/{credential-password-ipID}/ip/{itemId}:
    get:
      tags:
        - Credentials
        - IP
        - Items
        - Password
        - Users
      summary: >-
        Retrieve User User Id Credential Password Ip Credential Password Ip Id
        Ip Item Id
      operationId: READ_Ip_for_User_CredentialPasswordIp
      description: >-
        Manage the IPs which may be used for a credential of a user for server
        authentication.
      parameters:
        - in: path
          name: userID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: credential-password-ipID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: itemId
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      responses:
        '200':
          description: >-
            Manage the IPs which may be used for a credential of a user for
            server authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermittedIpRead'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
    put:
      tags:
        - Credentials
        - IP
        - Items
        - Password
        - Users
      summary: >-
        Update User User Id Credential Password Ip Credential Password Ip Id Ip
        Item Id
      operationId: UPDATE_Ip_for_User_CredentialPasswordIp
      description: >-
        Manage the IPs which may be used for a credential of a user for server
        authentication.
      parameters:
        - in: path
          name: userID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: credential-password-ipID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: itemId
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermittedIp'
      responses:
        '200':
          description: >-
            Manage the IPs which may be used for a credential of a user for
            server authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermittedIpUpdate'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
  /user/{userID}/credential-password-ip/{credential-password-ipID}/ip:
    post:
      tags:
        - Credentials
        - IP
        - Password
        - Users
      summary: Create User User Id Credential Password Ip Credential Password Ip Id Ip
      operationId: CREATE_Ip_for_User_CredentialPasswordIp
      description: >-
        Manage the IPs which may be used for a credential of a user for server
        authentication.
      parameters:
        - in: path
          name: userID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: credential-password-ipID
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      requestBody:
        description: ''
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermittedIp'
      responses:
        '200':
          description: >-
            Manage the IPs which may be used for a credential of a user for
            server authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermittedIpCreate'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
    get:
      tags:
        - Credentials
        - IP
        - Password
        - Users
      summary: >-
        Retrieve User User Id Credential Password Ip Credential Password Ip Id
        Ip
      operationId: List_all_Ip_for_User_CredentialPasswordIp
      description: >-
        Manage the IPs which may be used for a credential of a user for server
        authentication.
      parameters:
        - in: path
          name: userID
          description: ''
          required: true
          schema:
            type: integer
        - in: path
          name: credential-password-ipID
          description: ''
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/Cache-Control'
        - $ref: '#/components/parameters/User-Agent'
        - $ref: '#/components/parameters/X-Bunq-Language'
        - $ref: '#/components/parameters/X-Bunq-Region'
        - $ref: '#/components/parameters/X-Bunq-Client-Request-Id'
        - $ref: '#/components/parameters/X-Bunq-Geolocation'
        - $ref: '#/components/parameters/X-Bunq-Client-Authentication'
      responses:
        '200':
          description: >-
            Manage the IPs which may be used for a credential of a user for
            server authentication.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermittedIpListing'
          headers:
            X-Bunq-Client-Response-Id:
              $ref: '#/components/headers/X-Bunq-Client-Response-Id'
            X-Bunq-Client-Request-Id:
              $ref: '#/components/headers/X-Bunq-Client-Request-Id'
            X-Bunq-Server-Signature:
              $ref: '#/components/headers/X-Bunq-Server-Signature'
        '400':
          $ref: '#/components/responses/GenericError'
tags: []
